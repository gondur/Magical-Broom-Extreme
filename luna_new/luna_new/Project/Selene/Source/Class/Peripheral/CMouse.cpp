

//-----------------------------------------------------------------------------------
// INCLUDE
//-----------------------------------------------------------------------------------
#include "Base.h"		// PCH
#include "Peripheral/CMouse.h"
#include "Core/CCore.h"


//-----------------------------------------------------------------------------------
// NAMESPACE
//-----------------------------------------------------------------------------------
using namespace Selene;


//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
CMouse::CMouse( HWND hWnd )
{
	m_hWindow = hWnd;
}


//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
CMouse::~CMouse()
{
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CMouse::Refresh( void )
{
	Bool BtnL = (::GetKeyState( VK_LBUTTON ) >> 7) & 0x01;
	Bool BtnR = (::GetKeyState( VK_RBUTTON ) >> 7) & 0x01;
	Bool BtnW = (::GetKeyState( VK_MBUTTON ) >> 7) & 0x01;

	//------------------------------------------------------------
	// 左クリック処理
	//------------------------------------------------------------
	if ( BtnL )
	{
		if ( m_ClickL )
		{
			m_StateL = MOUSE_HOLD;
		}
		else
		{
			m_StateL = MOUSE_PUSH;
		}
	}
	else
	{
		if ( m_ClickL )
		{
			m_StateL = MOUSE_PULL;
		}
		else
		{
			m_StateL = MOUSE_FREE;
		}
	}

	//------------------------------------------------------------
	// 右クリック処理
	//------------------------------------------------------------
	if ( BtnR )
	{
		if ( m_ClickR )
		{
			m_StateR = MOUSE_HOLD;
		}
		else
		{
			m_StateR = MOUSE_PUSH;
		}
	}
	else
	{
		if ( m_ClickR )
		{
			m_StateR = MOUSE_PULL;
		}
		else
		{
			m_StateR = MOUSE_FREE;
		}
	}

	//------------------------------------------------------------
	// ホイールクリック処理
	//------------------------------------------------------------
	if ( BtnW )
	{
		if ( m_ClickW )
		{
			m_StateW = MOUSE_HOLD;
		}
		else
		{
			m_StateW = MOUSE_PUSH;
		}
	}
	else
	{
		if ( m_ClickW )
		{
			m_StateW = MOUSE_PULL;
		}
		else
		{
			m_StateW = MOUSE_FREE;
		}
	}

	//------------------------------------------------------------
	// 状態保存
	//------------------------------------------------------------
	m_ClickL = BtnL;
	m_ClickR = BtnR;
	m_ClickW = BtnW;

	//------------------------------------------------------------
	// スクリーン上の位置
	//------------------------------------------------------------
	POINT Cursor;
	::GetCursorPos( &Cursor );
	::ScreenToClient( m_hWindow, &Cursor );
	m_MoveX = Cursor.x - m_PosX;
	m_MoveY = Cursor.y - m_PosY;
	m_PosX = Cursor.x;
	m_PosY = Cursor.y;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CMouse::SetCursorPos( POINT Pt )
{
	::ClientToScreen( m_hWindow, &Pt );
	::SetCursorPos( Pt.x, Pt.y );
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CMouse::SetMouseWheel( Sint16 w )
{
	m_PosW += w;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CMouse::SetDoubleClickL( void )
{
	m_DoubleClickL = true;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CMouse::SetDoubleClickR( void )
{
	m_DoubleClickR = true;
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
void CMouse::SetDoubleClickM( void )
{
	m_DoubleClickW = true;
}

