

//-----------------------------------------------------------------------------------
// INCLUDE
//-----------------------------------------------------------------------------------
#include "Base.h"		// PCH
#include "Local.h"
#include "Render/Model/CFrame.h"
#include "Render/Model/CMesh.h"

#if ENABLE_3D

//-----------------------------------------------------------------------------------
// NAMESPACE
//-----------------------------------------------------------------------------------
using namespace Selene;


//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
CFrame::CFrame()
	: m_pMesh	( NULL )
{
	SetName( L"フレーム" );

	m_mParent.Identity();
	m_mWorld.Identity();
}

//-----------------------------------------------------------------------------------
/**
*/
//-----------------------------------------------------------------------------------
CFrame::~CFrame()
{
}

//-----------------------------------------------------------------------------------
/*
*/
//-----------------------------------------------------------------------------------
void CFrame::ConnectChildFrame( CFrame *pFrame )
{
	m_Child.InsertEnd( pFrame );
}

//-----------------------------------------------------------------------------------
/*
*/
//-----------------------------------------------------------------------------------
void CFrame::ConnectMesh( CMesh *pMesh )
{
	m_pMesh = pMesh;
}

//-----------------------------------------------------------------------------------
/*
*/
//-----------------------------------------------------------------------------------
void CFrame::SetParentMatrix( CMatrix &mParent )
{
	m_mParent = mParent;
}

//-----------------------------------------------------------------------------------
/*
*/
//-----------------------------------------------------------------------------------
void CFrame::GetTransform( CMatrix &Mtx )
{
	Mtx = m_mWorld;
}

//-----------------------------------------------------------------------------------
/*
*/
//-----------------------------------------------------------------------------------
void CFrame::GetTransformInverse( CMatrix &Mtx )
{
	Mtx.Inverse( m_mWorld );
}

//-----------------------------------------------------------------------------------
/*
*/
//-----------------------------------------------------------------------------------
void CFrame::UpdateTransform( CMatrix &mWorld )
{
	// ローカルの変換をワールドへ
	m_mWorld.Multiply( m_mParent, mWorld );

	// この階層へ
	CBaseObject *pObj = m_Child.GetTop();
	while ( pObj != NULL )
	{
		(dynamic_cast<CFrame*>(pObj))->UpdateTransform( m_mWorld );
		pObj = m_Child.GetNext( pObj );
	}

}

//-----------------------------------------------------------------------------------
/*
*/
//-----------------------------------------------------------------------------------
void CFrame::Rendering( void )
{
	// 子供をレンダリング
	CFrame *pFrame = dynamic_cast<CFrame*>(m_Child.GetTop());
	while ( pFrame != NULL )
	{
		pFrame->Rendering();
		pFrame = dynamic_cast<CFrame*>(m_Child.GetNext( pFrame ));
	}

	// 所持メッシュをレンダリング
	if ( m_pMesh != NULL )
	{
		m_pMesh->Rendering();
	}
}

#endif // ENABLE_3D