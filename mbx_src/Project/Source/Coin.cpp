//======================================================================================
//======================================================================================
//
//
//			コイン
//
//
//======================================================================================
//======================================================================================


//======================================================================================
//	include
//======================================================================================
#include "Coin.h"
#include "Sound.h"


//======================================================================================
//
//	コンストラクタ
//
//======================================================================================
CCOIN::CCOIN( float x, float y, long angle ) : CSPRITE( SORT_COIN )
{
	SetHitCount( 7 );

	Px = x;
	Py = y;
	bHit = true;
	float speed = F(RAND(1<<16,8<<16))/65536.0f;
	x1 = F(LunaMath::Cos( angle ))/65536.0f*speed;
	y1 = F(LunaMath::Sin( angle ))/65536.0f*speed;
	x2 = -0.05f;
	y2 = 0.1f;
	Angle = RAND( 0, 4095 );
	AddAngle = -RAND( 128, 384 );
	No = RAND( 0, 7 );
}

//======================================================================================
//
//	処理
//
//======================================================================================
bool CCOIN::Action( void )
{
	Angle += AddAngle;
	Angle &= 4095;
	Px += x1 += x2;
	Py += y1 += y2;
	if ( Px < -50 ) return true;
	if ( Py > 390 )
	{
		if ( y1 < 3 ) y1 = 3;
		y1 = -y1;
	}

	// あたり判定
	lpHitPt[0].x =  0;	lpHitPt[0].y = -13;
	lpHitPt[1].x =  6;	lpHitPt[1].y = -10;
	lpHitPt[2].x =  6;	lpHitPt[2].y = +10;
	lpHitPt[3].x =  0;	lpHitPt[3].y = +13;
	lpHitPt[4].x = -6;	lpHitPt[4].y = +10;
	lpHitPt[5].x = -6;	lpHitPt[5].y = -10;
	for ( long i = 0; i < 6; i++ )
	{
		LunaMath::RotatePoint( &lpHitPt[i].x, &lpHitPt[i].y, Angle );
		lpHitPt[i].x += (long)Px;
		lpHitPt[i].y += (long)Py;
	}
	lpHitPt[6] = lpHitPt[0];

	// 描画
	RECT dest = { (long)Px-6, (long)Py-13, (long)Px+6, (long)Py+13 };
	RECT src = { 576+No*13, 758, 576+No*13+13, 758+26 };
	Sprite[1][0]->DrawRotate( &dest, D3DCOLOR_XRGB(255,255,255), ANGLE2PAI(Angle), &src );

	return bDeath;
}

//======================================================================================
//
//	コイン消滅時
//
//======================================================================================
void CCOIN::Damage( long pow )
{
	CSound::Play( SE_COIN );
	bHit = false;
	bDeath = true;
}